import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.List;

public class AmazonCartTest {
    public static void main(String[] args) {
        // Set up WebDriver
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();
        
        try {
            WebDriverWait wait = new WebDriverWait(driver, 10);

            // Step 1: Navigate to Amazon
            driver.get("https://www.amazon.com/");
            wait.until(ExpectedConditions.titleContains("Amazon"));

            // Step 2: Search for "toys"
            WebElement searchBox = driver.findElement(By.id("twotabsearchtextbox"));
            searchBox.sendKeys("toys");
            searchBox.submit();

            // Wait for results to load
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".s-main-slot")));

            // Step 3: Select any 2 products and add to cart
            List<WebElement> products = driver.findElements(By.cssSelector(".s-main-slot .s-result-item"));
            String[] productPrices = new String[2];

            for (int i = 0; i < 2; i++) {
                // Get price on search result page
                WebElement product = products.get(i);
                productPrices[i] = product.findElement(By.cssSelector(".a-price-whole")).getText();

                // Click on the product
                product.click();

                // Wait for product details page
                wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("buyNow")));
                
                // Validate price on product details page
                String productDetailPrice = driver.findElement(By.cssSelector(".a-price-whole")).getText();
                assert productDetailPrice.equals(productPrices[i]) : "Price mismatch on product details page";

                // Add to cart
                WebElement addToCartButton = driver.findElement(By.id("add-to-cart-button"));
                addToCartButton.click();

                // Go back to search results
                driver.navigate().back();
                wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".s-main-slot")));
                products = driver.findElements(By.cssSelector(".s-main-slot .s-result-item")); // Refresh product list
            }

            // Step 4: Validate total price in the cart
            WebElement cartIcon = driver.findElement(By.id("nav-cart"));
            cartIcon.click();

            // Wait for cart page to load
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".sc-subtotal-amount"))));
            String totalPrice = driver.findElement(By.cssSelector(".sc-subtotal-amount")).getText();

            // Calculate expected total price
            double expectedTotal = 0;
            for (String price : productPrices) {
                expectedTotal += Double.parseDouble(price.replace(",", ""));
            }
            String expectedTotalString = String.valueOf(expectedTotal);
            
            // Validate total price
            assert totalPrice.equals(expectedTotalString) : "Total price mismatch in cart summary";

            System.out.println("All validations passed!");

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // Close the browser
            driver.quit();
        }
    }
}
