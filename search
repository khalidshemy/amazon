import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import java.time.Duration;

public class AmazonCartTest {
    private WebDriver driver;
    private WebDriverWait wait;

    @BeforeClass
    public void setup() {
        // Set the path to the ChromeDriver
        System.setProperty("webdriver.chrome.driver", "downloads/chromedriver");
        driver = new ChromeDriver();
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        driver.manage().window().maximize();
    }

    @Test
    public void addProductsToCart() {
        // Navigate to Amazon
        driver.get("https://www.amazon.com/");

        // Search for "toys"
        WebElement searchBox = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("twotabsearchtextbox")));
        searchBox.sendKeys("toys");
        searchBox.submit();

        // Wait for search results to load
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".s-main-slot")));

        // Select first two products
        for (int i = 1; i <= 2; i++) {
            WebElement product = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".s-main-slot .s-result-item:nth-child(" + (i + 1) + ")")));
            String price = product.findElement(By.cssSelector(".a-price .a-offscreen")).getText(); // Get price
            product.click(); // Go to product details page

            // Add to cart
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("add-to-cart-button"))).click();

            // Validate price
            WebElement priceOnProductPage = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("priceblock_ourprice")));
            Assert.assertEquals(priceOnProductPage.getText(), price, "Price does not match on Product Page!");

            // Go back to search results
            driver.navigate().back();
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".s-main-slot")));
        }

        // Go to cart
        driver.findElement(By.id("nav-cart")).click();

        // Validate total price
        String totalPrice = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".sc-subtotal .a-size-medium"))).getText();
        Assert.assertTrue(totalPrice.contains("Total"), "Total price is not displayed correctly!");
    }

    @AfterClass
    public void tearDown() {
        driver.quit();
    }
}
